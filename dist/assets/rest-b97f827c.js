var D=Object.defineProperty;var y=(a,i)=>D(a,"name",{value:i,configurable:!0});import{s as q,i as L}from"./index-d354be19.js";var x={},$="%[a-f0-9]{2}",I=new RegExp("("+$+")|([^%]+?)","gi"),C=new RegExp("("+$+")+","gi");function R(a,i){try{return[decodeURIComponent(a.join(""))]}catch{}if(a.length===1)return a;i=i||1;var s=a.slice(0,i),u=a.slice(i);return Array.prototype.concat.call([],R(s),R(u))}y(R,"decodeComponents");function _(a){try{return decodeURIComponent(a)}catch{for(var i=a.match(I)||[],s=1;s<i.length;s++)a=R(i,s).join(""),i=a.match(I)||[];return a}}y(_,"decode");function M(a){for(var i={"%FE%FF":"��","%FF%FE":"��"},s=C.exec(a);s;){try{i[s[0]]=decodeURIComponent(s[0])}catch{var u=_(s[0]);u!==s[0]&&(i[s[0]]=u)}s=C.exec(a)}i["%C2"]="�";for(var o=Object.keys(i),d=0;d<o.length;d++){var g=o[d];a=a.replace(new RegExp(g,"g"),i[g])}return a}y(M,"customDecodeURIComponent");var v=y(function(a){if(typeof a!="string")throw new TypeError("Expected `encodedURI` to be of type `string`, got `"+typeof a+"`");try{return a=a.replace(/\+/g," "),decodeURIComponent(a)}catch{return M(a)}},"decodeUriComponent"),U=y((a,i)=>{if(!(typeof a=="string"&&typeof i=="string"))throw new TypeError("Expected the arguments to be of type `string`");if(i==="")return[a];const s=a.indexOf(i);return s===-1?[a]:[a.slice(0,s),a.slice(s+i.length)]},"splitOnFirst"),V=y(function(a,i){for(var s={},u=Object.keys(a),o=Array.isArray(i),d=0;d<u.length;d++){var g=u[d],m=a[g];(o?i.indexOf(g)!==-1:i(g,m,a))&&(s[g]=m)}return s},"filterObj");(function(a){const i=q,s=v,u=U,o=V,d=y(r=>r==null,"isNullOrUndefined"),g=Symbol("encodeFragmentIdentifier");function m(r){switch(r.arrayFormat){case"index":return e=>(n,t)=>{const c=n.length;return t===void 0||r.skipNull&&t===null||r.skipEmptyString&&t===""?n:t===null?[...n,[h(e,r),"[",c,"]"].join("")]:[...n,[h(e,r),"[",h(c,r),"]=",h(t,r)].join("")]};case"bracket":return e=>(n,t)=>t===void 0||r.skipNull&&t===null||r.skipEmptyString&&t===""?n:t===null?[...n,[h(e,r),"[]"].join("")]:[...n,[h(e,r),"[]=",h(t,r)].join("")];case"colon-list-separator":return e=>(n,t)=>t===void 0||r.skipNull&&t===null||r.skipEmptyString&&t===""?n:t===null?[...n,[h(e,r),":list="].join("")]:[...n,[h(e,r),":list=",h(t,r)].join("")];case"comma":case"separator":case"bracket-separator":{const e=r.arrayFormat==="bracket-separator"?"[]=":"=";return n=>(t,c)=>c===void 0||r.skipNull&&c===null||r.skipEmptyString&&c===""?t:(c=c===null?"":c,t.length===0?[[h(n,r),e,h(c,r)].join("")]:[[t,h(c,r)].join(r.arrayFormatSeparator)])}default:return e=>(n,t)=>t===void 0||r.skipNull&&t===null||r.skipEmptyString&&t===""?n:t===null?[...n,h(e,r)]:[...n,[h(e,r),"=",h(t,r)].join("")]}}y(m,"encoderForArrayFormat");function j(r){let e;switch(r.arrayFormat){case"index":return(n,t,c)=>{if(e=/\[(\d*)\]$/.exec(n),n=n.replace(/\[\d*\]$/,""),!e){c[n]=t;return}c[n]===void 0&&(c[n]={}),c[n][e[1]]=t};case"bracket":return(n,t,c)=>{if(e=/(\[\])$/.exec(n),n=n.replace(/\[\]$/,""),!e){c[n]=t;return}if(c[n]===void 0){c[n]=[t];return}c[n]=[].concat(c[n],t)};case"colon-list-separator":return(n,t,c)=>{if(e=/(:list)$/.exec(n),n=n.replace(/:list$/,""),!e){c[n]=t;return}if(c[n]===void 0){c[n]=[t];return}c[n]=[].concat(c[n],t)};case"comma":case"separator":return(n,t,c)=>{const l=typeof t=="string"&&t.includes(r.arrayFormatSeparator),f=typeof t=="string"&&!l&&F(t,r).includes(r.arrayFormatSeparator);t=f?F(t,r):t;const O=l||f?t.split(r.arrayFormatSeparator).map(J=>F(J,r)):t===null?t:F(t,r);c[n]=O};case"bracket-separator":return(n,t,c)=>{const l=/(\[\])$/.test(n);if(n=n.replace(/\[\]$/,""),!l){c[n]=t&&F(t,r);return}const f=t===null?[]:t.split(r.arrayFormatSeparator).map(O=>F(O,r));if(c[n]===void 0){c[n]=f;return}c[n]=[].concat(c[n],f)};default:return(n,t,c)=>{if(c[n]===void 0){c[n]=t;return}c[n]=[].concat(c[n],t)}}}y(j,"parserForArrayFormat");function S(r){if(typeof r!="string"||r.length!==1)throw new TypeError("arrayFormatSeparator must be single character string")}y(S,"validateArrayFormatSeparator");function h(r,e){return e.encode?e.strict?i(r):encodeURIComponent(r):r}y(h,"encode");function F(r,e){return e.decode?s(r):r}y(F,"decode");function E(r){return Array.isArray(r)?r.sort():typeof r=="object"?E(Object.keys(r)).sort((e,n)=>Number(e)-Number(n)).map(e=>r[e]):r}y(E,"keysSorter");function N(r){const e=r.indexOf("#");return e!==-1&&(r=r.slice(0,e)),r}y(N,"removeHash");function p(r){let e="";const n=r.indexOf("#");return n!==-1&&(e=r.slice(n)),e}y(p,"getHash");function T(r){r=N(r);const e=r.indexOf("?");return e===-1?"":r.slice(e+1)}y(T,"extract");function w(r,e){return e.parseNumbers&&!Number.isNaN(Number(r))&&typeof r=="string"&&r.trim()!==""?r=Number(r):e.parseBooleans&&r!==null&&(r.toLowerCase()==="true"||r.toLowerCase()==="false")&&(r=r.toLowerCase()==="true"),r}y(w,"parseValue");function b(r,e){e=Object.assign({decode:!0,sort:!0,arrayFormat:"none",arrayFormatSeparator:",",parseNumbers:!1,parseBooleans:!1},e),S(e.arrayFormatSeparator);const n=j(e),t=Object.create(null);if(typeof r!="string"||(r=r.trim().replace(/^[?#&]/,""),!r))return t;for(const c of r.split("&")){if(c==="")continue;let[l,f]=u(e.decode?c.replace(/\+/g," "):c,"=");f=f===void 0?null:["comma","separator","bracket-separator"].includes(e.arrayFormat)?f:F(f,e),n(F(l,e),f,t)}for(const c of Object.keys(t)){const l=t[c];if(typeof l=="object"&&l!==null)for(const f of Object.keys(l))l[f]=w(l[f],e);else t[c]=w(l,e)}return e.sort===!1?t:(e.sort===!0?Object.keys(t).sort():Object.keys(t).sort(e.sort)).reduce((c,l)=>{const f=t[l];return f&&typeof f=="object"&&!Array.isArray(f)?c[l]=E(f):c[l]=f,c},Object.create(null))}y(b,"parse"),a.extract=T,a.parse=b,a.stringify=(r,e)=>{if(!r)return"";e=Object.assign({encode:!0,strict:!0,arrayFormat:"none",arrayFormatSeparator:","},e),S(e.arrayFormatSeparator);const n=y(f=>e.skipNull&&d(r[f])||e.skipEmptyString&&r[f]==="","shouldFilter"),t=m(e),c={};for(const f of Object.keys(r))n(f)||(c[f]=r[f]);const l=Object.keys(c);return e.sort!==!1&&l.sort(e.sort),l.map(f=>{const O=r[f];return O===void 0?"":O===null?h(f,e):Array.isArray(O)?O.length===0&&e.arrayFormat==="bracket-separator"?h(f,e)+"[]":O.reduce(t(f),[]).join("&"):h(f,e)+"="+h(O,e)}).filter(f=>f.length>0).join("&")},a.parseUrl=(r,e)=>{e=Object.assign({decode:!0},e);const[n,t]=u(r,"#");return Object.assign({url:n.split("?")[0]||"",query:b(T(r),e)},e&&e.parseFragmentIdentifier&&t?{fragmentIdentifier:F(t,e)}:{})},a.stringifyUrl=(r,e)=>{e=Object.assign({encode:!0,strict:!0,[g]:!0},e);const n=N(r.url).split("?")[0]||"",t=a.extract(r.url),c=a.parse(t,{sort:!1}),l=Object.assign(c,r.query);let f=a.stringify(l,e);f&&(f=`?${f}`);let O=p(r.url);return r.fragmentIdentifier&&(O=`#${e[g]?h(r.fragmentIdentifier,e):r.fragmentIdentifier}`),`${n}${f}${O}`},a.pick=(r,e,n)=>{n=Object.assign({parseFragmentIdentifier:!0,[g]:!1},n);const{url:t,query:c,fragmentIdentifier:l}=a.parseUrl(r,n);return a.stringifyUrl({url:t,query:o(c,e),fragmentIdentifier:l},n)},a.exclude=(r,e,n)=>{const t=Array.isArray(e)?c=>!e.includes(c):(c,l)=>!e(c,l);return a.pick(r,t,n)}})(x);var A=globalThis&&globalThis.__assign||function(){return A=Object.assign||function(a){for(var i,s=1,u=arguments.length;s<u;s++){i=arguments[s];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(a[o]=i[o])}return a},A.apply(this,arguments)};const B=y(function(a,i,s){return i===void 0&&(i=L),s===void 0&&(s="Content-Range"),{getList:function(u,o){var d=o.pagination,g=d.page,m=d.perPage,j=o.sort,S=j.field,h=j.order,F=(g-1)*m,E=g*m-1,N={sort:JSON.stringify([S,h]),range:JSON.stringify([F,E]),filter:JSON.stringify(o.filter)},p="".concat(a,"/").concat(u,"?").concat(x.stringify(N)),T=s==="Content-Range"?{headers:new Headers({Range:"".concat(u,"=").concat(F,"-").concat(E)})}:{};return i(p,T).then(function(w){var b=w.headers,r=w.json;if(!b.has(s))throw new Error("The ".concat(s," header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ").concat(s," in the Access-Control-Expose-Headers header?"));return{data:r,total:s==="Content-Range"?parseInt(b.get("content-range").split("/").pop(),10):parseInt(b.get(s.toLowerCase()))}})},getOne:function(u,o){return i("".concat(a,"/").concat(u,"/").concat(o.id)).then(function(d){var g=d.json;return{data:g}})},getMany:function(u,o){var d={filter:JSON.stringify({id:o.ids})},g="".concat(a,"/").concat(u,"?").concat(x.stringify(d));return i(g).then(function(m){var j=m.json;return{data:j}})},getManyReference:function(u,o){var d,g=o.pagination,m=g.page,j=g.perPage,S=o.sort,h=S.field,F=S.order,E=(m-1)*j,N=m*j-1,p={sort:JSON.stringify([h,F]),range:JSON.stringify([(m-1)*j,m*j-1]),filter:JSON.stringify(A(A({},o.filter),(d={},d[o.target]=o.id,d)))},T="".concat(a,"/").concat(u,"?").concat(x.stringify(p)),w=s==="Content-Range"?{headers:new Headers({Range:"".concat(u,"=").concat(E,"-").concat(N)})}:{};return i(T,w).then(function(b){var r=b.headers,e=b.json;if(!r.has(s))throw new Error("The ".concat(s," header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare ").concat(s," in the Access-Control-Expose-Headers header?"));return{data:e,total:s==="Content-Range"?parseInt(r.get("content-range").split("/").pop(),10):parseInt(r.get(s.toLowerCase()))}})},update:function(u,o){return i("".concat(a,"/").concat(u,"/").concat(o.id),{method:"PUT",body:JSON.stringify(o.data)}).then(function(d){var g=d.json;return{data:g}})},updateMany:function(u,o){return Promise.all(o.ids.map(function(d){return i("".concat(a,"/").concat(u,"/").concat(d),{method:"PUT",body:JSON.stringify(o.data)})})).then(function(d){return{data:d.map(function(g){var m=g.json;return m.id})}})},create:function(u,o){return i("".concat(a,"/").concat(u),{method:"POST",body:JSON.stringify(o.data)}).then(function(d){var g=d.json;return{data:g}})},delete:function(u,o){return i("".concat(a,"/").concat(u,"/").concat(o.id),{method:"DELETE",headers:new Headers({"Content-Type":"text/plain"})}).then(function(d){var g=d.json;return{data:g}})},deleteMany:function(u,o){return Promise.all(o.ids.map(function(d){return i("".concat(a,"/").concat(u,"/").concat(d),{method:"DELETE",headers:new Headers({"Content-Type":"text/plain"})})})).then(function(d){return{data:d.map(function(g){var m=g.json;return m.id})}})}}},"simpleRestProvider"),P=B("http://localhost:4000"),G=new Proxy(P,{get:(a,i,s)=>i==="then"?s:(u,o)=>new Promise(d=>setTimeout(()=>d(P[i](u,o)),500))});export{G as default};
//# sourceMappingURL=rest-b97f827c.js.map
